{"version":3,"sources":["services/readings.js","services/sensors.js","components/NavBar.js","components/CustomLineChart.js","components/Greeting.js","components/TimeDateDisplay.js","components/DataSummary.js","App.js","index.js"],"names":["readings","axios","get","then","response","data","sensors","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","open","setState","drawerOpen","state","classes","react_default","a","createElement","className","root","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","color","aria-label","onClick","Menu_default","Drawer_default","onClose","variant","anchor","tabIndex","role","onKeyDown","List_default","map","text","index","ListItem_default","button","key","ListItemText_default","primary","React","Component","withStyles","flexGrow","grow","marginLeft","marginRight","CustomLineChart","_ref","yDataKeys","yUnit","yDomain","xDataKey","boundaries","es6","width","height","cx","cy","outerRadius","dataKey","type","stroke","dot","name","charAt","toUpperCase","slice","unit","vertical","tick","domain","allowDecimals","boundary","x","label","Date","toDateString","Greeting","user","hour","getHours","dateOptions","weekday","month","day","TimeDateDisplay","time","_this2","intervalID","setInterval","clearInterval","Typography_default","toLocaleString","undefined","minute","second","toLocaleDateString","calculateAverage","array","sum","reduce","acc","val","Math","round","length","DataSummary","App","selectSensor","console","log","concat","relevantReadings","filter","reading","sensorname","selectedSensor","chosenReadings","handleTabChange","event","value","currentTab","filterReadings","handleRangeChange","range","toMilliseconds","days","getTime","date","calculateDateBoundaries","setHours","v","i","indexOf","sensorsService","readingsService","_this3","components_NavBar","Grid_default","container","spacing","alignItems","justify","item","xs","components_Greeting","components_TimeDateDisplay","Tabs_default","onChange","indicatorColor","textColor","centered","sensor","Tab_default","as","md","Slider_default","slider","min","max","step","align","components_CustomLineChart","components_DataSummary","Table_default","TableHead_default","TableRow_default","TableBody_default","_id","TableCell_default","firstonline","lastonline","padding","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.46182feb.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseURL = '/api/readings'\n\n// Get all\nconst getAll = () => {\n  return axios.get(baseURL).then(response => response.data)\n}\n\n// Get for certain sensor\n\n// ?\n\nexport default {\n  getAll\n}","import axios from 'axios'\n\nconst baseURL = '/api/sensors'\n\n// Get all\nconst getAll = () => {\n  return axios.get(baseURL).then(response => response.data)\n}\n\nexport default {\n  getAll\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport Drawer from '@material-ui/core/Drawer';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      drawerOpen: false\n    }\n  }\n\n  toggleDrawer = (open) => () => {\n    this.setState({ drawerOpen: open })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={this.toggleDrawer(true)}>\n              <MenuIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          open={this.state.drawerOpen}\n          onClose={this.toggleDrawer(false)}\n          variant=\"temporary\"\n          anchor=\"left\"\n        >\n          <div\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.toggleDrawer(false)}\n            onKeyDown={this.toggleDrawer(false)}\n          >\n            <List>\n              {['Home', 'Settings'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        </Drawer>\n      </div>\n    )\n  }\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavBar);","import React from 'react'\nimport { ResponsiveContainer, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ReferenceLine } from 'recharts'\n\nconst CustomLineChart = ({ data, yDataKeys, yUnit, yDomain, xDataKey, boundaries }) => {\n\n  return (\n    <ResponsiveContainer width='90%' height={300}>\n      <LineChart\n        cx=\"50%\"\n        cy=\"50%\"\n        outerRadius=\"80%\"\n        data={data}>\n        {\n          yDataKeys.map(dataKey => <Line\n            key={dataKey}\n            type=\"monotone\"\n            dataKey={dataKey}\n            stroke=\"#7D53DE\"\n            dot={false}\n            name={dataKey.charAt(0).toUpperCase() + dataKey.slice(1)}\n            unit={yUnit}\n          />)\n        }\n        <CartesianGrid stroke=\"#ccc\" vertical={false} />\n        <XAxis dataKey={xDataKey} tick={false} type=\"number\" domain={['dataMin', 'dataMax']} />\n        <YAxis type=\"number\" domain={yDomain} allowDecimals={false} />\n        <Tooltip />\n        {\n          boundaries.map(boundary =>\n            <ReferenceLine key={boundary} x={boundary} stroke=\"blue\" label={new Date(boundary).toDateString()} />\n          )\n        }\n      </LineChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default CustomLineChart","import React from 'react'\n\nconst Greeting = ({ user }) => {\n  const hour = new Date().getHours()\n\n  if (hour >= 4 && hour <= 10) {\n    return <div className=\"greeting\">Good Morning <br /> <span>{user}</span></div >\n  }\n  else if (hour >= 22 || hour <= 3) {\n    return <div className=\"greeting\">Good Night <br /> <span>{user}</span></div >\n  }\n  else if (hour >= 18 && hour < 22) {\n    return <div className=\"greeting\">Good Evening <br /> <span>{user}</span></div >\n  }\n  else {\n    return <div className=\"greeting\">Good Day <br /> <span>{user}</span></div >\n  }\n}\n\nexport default Greeting","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\nvar dateOptions = { weekday: 'long', month: 'long', day: 'numeric' };\n\nclass TimeDateDisplay extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      time: new Date()\n    }\n  }\n\n  // When component is inserted into the DOM\n  componentDidMount() {\n    this.intervalID = setInterval(\n      () => this.tick(),\n      1000\n    )\n  }\n\n  // When component is removed from the DOM\n  componentWillUnmount() {\n    clearInterval(this.intervalID)\n  }\n\n  tick() {\n    this.setState({\n      time: new Date()\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"timeDateDisplay\">\n        <Typography variant=\"h2\">\n          {this.state.time.toLocaleString(undefined, {\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit'\n          })}\n        </Typography>\n        <Typography variant=\"h6\">\n          {this.state.time.toLocaleDateString('en-GB', dateOptions)}\n        </Typography>\n      </div>\n    )\n  }\n}\n\nexport default TimeDateDisplay;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\nconst calculateAverage = (array, dataKey) => {\n  const sum = array.reduce(function (acc, val) { return acc + val[dataKey] }, 0)\n  return Math.round(sum / array.length * 100) / 100;\n}\n\nconst DataSummary = ({ data, boundaries }) => {\n\n  return (\n    <div>\n      <Typography variant=\"h5\">Data Summary</Typography>\n      <ul>\n        <li key=\"datapoints\">{data.length} data points over {boundaries.length} days</li>\n        <li key=\"temp\">Average temperature {calculateAverage(data, \"temperature\")}</li>\n        <li key=\"hum\">Average humidity {calculateAverage(data, \"humidity\")}</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default DataSummary","import React from 'react';\n\n// Services\nimport readingsService from './services/readings'\nimport sensorsService from './services/sensors'\n\n// Components\nimport NavBar from './components/NavBar'\nimport CustomLineChart from './components/CustomLineChart'\nimport Greeting from './components/Greeting'\nimport TimeDateDisplay from './components/TimeDateDisplay'\nimport DataSummary from './components/DataSummary'\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n// --- Grid\nimport Grid from '@material-ui/core/Grid';\n\n// --- Tabs\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n// --- Forms & Inputs\nimport Slider from '@material-ui/lab/Slider';\n\n// --- Table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  slider: {\n    padding: '22px 0px'\n  },\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      sensors: [],\n      readings: [],\n      chosenReadings: [],\n      selectedSensor: '',\n      currentTab: 0,\n      range: 14\n    }\n\n    console.log('constructor')\n  }\n\n  componentDidMount() {\n    console.log('App did mount')\n\n    sensorsService\n      .getAll()\n      .then(response => {\n        console.log('Sensors promise fulfilled')\n        this.setState({\n          sensors: response,\n          selectedSensor: response[0].name\n        })\n      })\n\n    readingsService\n      .getAll()\n      .then(response => {\n        console.log('Readings promise fulfilled')\n\n        this.setState({\n          readings: response,\n        })\n        this.filterReadings()\n      })\n    this.setState({\n      currentTab: 0\n    })\n  }\n\n  selectSensor = (name) => {\n    return () => {\n      console.log(`Sensor ${name} is being selected`)\n      const relevantReadings = this.state.readings.filter(reading => reading.sensorname === name)\n      this.setState({\n        selectedSensor: name,\n        chosenReadings: relevantReadings\n      })\n    }\n  }\n\n  handleTabChange = (event, value) => {\n    this.setState({ currentTab: value })\n    this.filterReadings()\n  }\n\n  handleRangeChange = (event, value) => {\n    this.setState({ range: value })\n    this.filterReadings()\n  }\n\n  toMilliseconds = (days) => {\n    return days * 24 * 60 * 60 * 1000\n  }\n\n  filterReadings = () => {\n    // Filter by sensor\n    const sensorReadings = this.state.readings.filter(reading => reading.sensorname === this.state.selectedSensor)\n\n    // Filter by timerange\n    const relevantReadings = sensorReadings.filter(reading =>\n      new Date().getTime() - new Date(reading.date).getTime() <= this.toMilliseconds(this.state.range))\n\n    this.setState({\n      chosenReadings: relevantReadings\n    })\n  }\n\n  calculateDateBoundaries = () => {\n    const boundaries = this.state.chosenReadings.map(reading => new Date(reading.date).setHours(0, 0, 0, 0, 0))\n      .filter((v, i, a) => a.indexOf(v) === i).map(date => new Date(date).getTime())\n    return boundaries\n  }\n\n  calculateAverage = (array, dataKey) => {\n    const sum = array.reduce(function (acc, val) { return acc + val[dataKey] }, 0)\n    return Math.round(sum / array.length * 100) / 100;\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <NavBar />\n\n        <Grid container\n          spacing={8}\n          alignItems=\"center\"\n          justify=\"center\">\n\n          <Grid item xs={6}>\n            <Greeting user={'Ossian'} />\n          </Grid>\n\n          <Grid item xs={6} >\n            <TimeDateDisplay />\n          </Grid>\n        </Grid>\n\n\n        <Tabs\n          value={this.state.currentTab}\n          onChange={this.handleTabChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          centered\n        >\n          {\n            this.state.sensors.map(sensor =>\n              <Tab key={sensor.name} as=\"button\" onClick={this.selectSensor(sensor.name)} label={sensor.name} />\n            )\n          }\n        </Tabs>\n\n\n        <Grid container\n          spacing={8}\n          alignItems=\"center\"\n          justify=\"center\">\n\n          <Grid item xs={10} md={8}>\n            <Slider\n              classes={{ container: classes.slider }}\n              value={this.state.range}\n              min={1}\n              max={14}\n              step={1}\n              onChange={this.handleRangeChange}\n            />\n            <p>\n              {this.state.range} {this.state.range < 1 ? ' hours' : ' day(s)'}\n            </p>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Typography align=\"center\" variant=\"h5\">Temperature</Typography>\n\n            <CustomLineChart\n              data={this.state.chosenReadings}\n              yDataKeys={[\"temperature\", \"temperatureOut\"]}\n              yUnit={\"°\"}\n              yDomain={[-10, 30]}\n              xDataKey={\"date\"}\n              boundaries={this.calculateDateBoundaries()}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Typography align=\"center\" variant=\"h5\">Humidity</Typography>\n\n            <CustomLineChart\n              data={this.state.chosenReadings}\n              yDataKeys={[\"humidity\", \"humidityOut\"]}\n              yUnit={\"%\"}\n              yDomain={[10, 100]}\n              xDataKey={\"date\"}\n              boundaries={this.calculateDateBoundaries()}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={5}>\n            <DataSummary data={this.state.chosenReadings} boundaries={this.calculateDateBoundaries()} />\n          </Grid>\n\n          <Grid item xs={12} md={5}>\n            <Typography variant=\"h5\">Sensors</Typography>\n\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <th>Sensorname</th>\n                  <th>First online</th>\n                  <th>Last online</th>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  this.state.sensors\n                    .map(sensor =>\n                      <TableRow key={sensor._id}>\n                        <TableCell>{sensor.name}</TableCell>\n                        <TableCell>{new Date(sensor.firstonline).toLocaleString('fi-FI')}</TableCell>\n                        <TableCell>{new Date(sensor.lastonline).toLocaleString('fi-FI')}</TableCell>\n                      </TableRow>\n                    )\n                }\n              </TableBody>\n            </Table>\n          </Grid>\n\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default withStyles(styles)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}